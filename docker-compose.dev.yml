# This is a development Docker Compose file.
# It is intended for development purposes only and should not be used as a production example.
# Misuse in production environments may lead to unexpected behavior or security risks.

networks:
  lingarr:
    
    external: true

services:
  Lingarr.Server:
    extra_hosts: # added for ollama 
      - "host.docker.internal:host-gateway"
    container_name: Lingarr.Server
    image: ${DOCKER_REGISTRY-}lingarrserver
    build:
      context: .
      dockerfile: Lingarr.Server/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION:-Debug}
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_CONNECTION=mysql
      - DB_HOST=Lingarr.Mysql
      - DB_PORT=3306
      - DB_DATABASE=LingarrMysql
      - DB_USERNAME=LingarrMysql
      - DB_PASSWORD=Secret1234
      - SERVICE_TYPE=libretranslate
      - LIBRE_TRANSLATE_URL=http://libretranslate:5000
      - SOURCE_LANGUAGES=[{"name":"English","code":"en"},{"name":"Dutch","code":"nl"}]
      - TARGET_LANGUAGES=[{"name":"Turkish","code":"tr"},{"name":"Dutch","code":"nl"}]
    volumes:
      - ../media/data/movies:/movies
      - ../media/data/tv:/tv
      - ../media/data/series/anime:/anime
    ports:
      - "9877:8080"
    networks:
      - lingarr
    depends_on:
      Lingarr.Mysql:
        condition: service_healthy

  Lingarr.Client:
    image: ${DOCKER_REGISTRY-}lingarrclient
    container_name: Lingarr.Client
    build:
      context: ./Lingarr.Client/
      dockerfile: Dockerfile
    ports:
      - "9876:9876"
    volumes:
      - ./Lingarr.Client:/app:rw
      - ./Lingarr.Client/node_modules:/app/node_modules
    tty: true
    command: /bin/sh -c "npm install && npm run dev"
    networks:
      - lingarr

  LibreTranslate:
    container_name: LibreTranslate
    image: libretranslate/libretranslate:latest
    restart: unless-stopped
    environment:
      - LT_LOAD_ONLY=en,tr,nl,pt
      - LT_DISABLE_WEB_UI=false # Optional, enable if you would like to make use of the LibreTranslate web interface 
    ports:
      - 5000:5000
    volumes:
      - ../media/libretranslate:/home/libretranslate/.local/share/argos-translate
    networks:
      - lingarr
    healthcheck:
      test: ["CMD-SHELL", "./venv/bin/python scripts/healthcheck.py"]

  Lingarr.Mysql:
    image: mariadb:10.5
    container_name: Lingarr.Mysql
    tty: true
    ports:
      - "1433:3306"
    environment:
      MYSQL_DATABASE: LingarrMysql
      MYSQL_USER: LingarrMysql
      MYSQL_PASSWORD: Secret1234
      MYSQL_ROOT_PASSWORD: Secret1234
      SERVICE_TAGS: dev
      SERVICE_NAME: mariadb
    networks:
      - lingarr
    command: mysqld --sql_mode=""
    healthcheck:
      test: "mysql $$MYSQL_DATABASE -u$$MYSQL_USER -p$$MYSQL_PASSWORD -e 'SELECT 1;'"
      interval: 10s
      timeout: 5s
      retries: 5

  Lingarr.PHPMyAdmin:
    image: phpmyadmin/phpmyadmin:5.0.1
    container_name: Lingarr.PHPMyAdmin
    environment:
      PMA_HOST: Lingarr.Mysql
      PMA_USER: LingarrMysql
      PMA_PASSWORD: Secret1234
      UPLOAD_LIMIT: 500M
    ports:
      - "9878:80"
    networks:
      - lingarr
        
  radarr:
    image: ghcr.io/hotio/radarr:nightly
    container_name: radarr
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ../media/data/movies:/movies
    restart: unless-stopped
    ports:
      - 7878:7878
    networks:
      - lingarr
        
  sonarr:
    image: ghcr.io/hotio/sonarr:nightly
    container_name: sonarr
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ../media/data/tv:/tv
      - ../media/data/series/anime:/anime
    restart: unless-stopped
    ports:
      - 8989:8989
    networks:
      - lingarr
        
#  localai:
#    container_name: localai
#    image: localai/localai:latest-aio-cpu
#    ports:
#      - 8080:8080
#    environment:
#      - 'PRELOAD_MODELS=[{"url": "github:go-skynet/model-gallery/mistral.yaml", "name": "mistral"}]'
#    stdin_open: true
#    tty: true
#    networks:
#      - lingarr